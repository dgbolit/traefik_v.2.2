version: "3.3"

networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

volumes:
    prometheus: {}
    grafana: {}

configs:
  dockerd_config:
    file: ./dockerd-exporter/Caddyfile
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml

services:
  dockerd-exporter:
    image: stefanprodan/caddy
    networks:
      - net
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  
  traefik:
    image: traefik:v2.2
    command:
          - "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--metrics.prometheus=true"
          - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
          - "--providers.docker=true"
          - "--providers.docker.swarmmode=true"
          - "--providers.docker.watch"
    networks:
          - default
          - net
          - traefik-public
    volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    ports:
          - target: 80
            published: 80
            mode: host
          - target: 443
            published: 443
            mode: host
          - target: 8080
            published: 8080
            protocol: tcp
            mode: ingress
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
          - traefik.enable=true
          - traefik.docker.network=net
          - traefik.constraint-label=traefik-public
          - traefik.http.routers.swarmprom-traefik-http.rule=Host(`traefik.sw.ibolit.internal`)
#          - traefik.http.routers.swarmprom-traefik-http.entrypoints=http
#          - traefik.http.routers.swarmprom-traefik-http.middlewares=https-redirect
          - traefik.http.routers.swarmprom-traefik-https.rule=Host(`traefik.sw.ibolit.internal`)
          - traefik.http.routers.swarmprom-traefik-https.entrypoints=https
          - traefik.http.routers.swarmprom-traefik-https.tls=true
          - traefik.http.routers.swarmprom-traefik-https.tls.certresolver=le
          - traefik.http.services.swarmprom-traefik.loadbalancer.server.port=8080
          - traefik.frontend.rule=Host:traefik.sw.ibolit.internal
          - traefik.http.middlewares.swarmprom-traefik-auth.basicauth.users=admin:$$apr1$ZwZbN/9H$$tdp1Crirouqi1SD758ZoL/
          - traefik.http.routers.swarmprom-traefik-https.middlewares=swarmprom-prometheus-auth
      

  cadvisor:
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: stefanprodan/swarmprom-grafana:5.3.4
    networks:
      - default
      - net
      - traefik-public
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=dsa321dsa
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.swarmprom-grafana-http.rule=Host(`grafana.sw.ibolit.internal`)
#        - traefik.http.routers.swarmprom-grafana-http.entrypoints=http
#        - traefik.http.routers.swarmprom-grafana-http.middlewares=https-redirect
        - traefik.http.routers.swarmprom-grafana-https.rule=Host(`grafana.sw.ibolit.internal`)
        - traefik.http.routers.swarmprom-grafana-https.entrypoints=https
        - traefik.http.routers.swarmprom-grafana-https.tls=true
        - traefik.http.routers.swarmprom-grafana-https.tls.certresolver=le
        - traefik.http.services.swarmprom-grafana.loadbalancer.server.port=3000
        - traefik.port=3000
        - traefik.frontend.rule=Host:grafana.sw.ibolit.internal

  node-exporter:
    image: stefanprodan/swarmprom-node-exporter:v0.16.0
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: stefanprodan/swarmprom-prometheus:v2.5.0
    networks:
      - default
      - net
      - traefik-public
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=${PROMETHEUS_RETENTION:-24h}'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.swarmprom-prometheus-http.rule=Host(`prometheus.sw.ibolit.internal`)
#        - traefik.http.routers.swarmprom-prometheus-http.entrypoints=http
#        - traefik.http.routers.swarmprom-prometheus-http.middlewares=https-redirect
        - traefik.http.routers.swarmprom-prometheus-https.rule=Host(`prometheus.sw.ibolit.internal`)
        - traefik.http.routers.swarmprom-prometheus-https.entrypoints=https
        - traefik.http.routers.swarmprom-prometheus-https.tls=true
        - traefik.http.routers.swarmprom-prometheus-https.tls.certresolver=le
        - traefik.http.services.swarmprom-prometheus.loadbalancer.server.port=9090
        - traefik.port=9090
        - traefik.frontend.rule=Host:prometheus.sw.ibolit.internal
        - traefik.http.middlewares.swarmprom-prometheus-auth.basicauth.users=admin:$$apr1$ZwZbN/9H$$tdp1Crirouqi1SD758ZoL/
        - traefik.http.routers.swarmprom-prometheus-https.middlewares=swarmprom-prometheus-auth
